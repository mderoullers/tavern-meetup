name: health-check

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Environment variables available to all jobs and steps in this workflow
env:
  PROJECT_ID: ${{ secrets.GCLOUD_PROJECT }}
  RUN_REGION: europe-west1
  SERVICE_NAME: beer-service

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Check out Git repository
      uses: actions/checkout@v2
    # - uses: olegtarasov/get-tag@v2
    #   id: tagName

    #Â Setup Java and Maven
    - name: Install Java and Maven
      uses: actions/setup-java@v1
      with:
        java-version: 11

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '281.0.0'
        service_account_email: ${{ secrets.GCP_SA_EMAIL }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        # export_default_credentials: true
    
    # Add maven cache
    - uses: actions/cache@v1
      with:
        path: ~/beer-api/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Configure gcloud CLI
    - name: gcloud Set up
      run: |
        gcloud config set project $PROJECT_ID
        gcloud auth configure-docker

    # Push the Docker image to Google Container Registry
    - name: Build Beer-service and push image to Google Container Registry
      run: |
        mvn -Pprod -DskipTests verify jib:dockerBuild --file=beer-api/pom.xml
        docker tag beer_api:latest gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:latest
        docker tag gcr.io/$PROJECT_ID/$SERVICE_NAME:latest gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

    # Deploy the Docker image to Cloud Run
    - name: Deploy beer-service
      run: |
        gcloud run deploy $SERVICE_NAME \
            --region $RUN_REGION \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
            --platform managed \
            --allow-unauthenticated
            --port=8080

  test:
    needs: setup-build-publish-deploy
    name: Test the contracts
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
    - name: Test with Pytest
      run: |
        sudo pip install pytest
        sudo pip install pytest-html==1.22.0
        sudo pip install tavern
        sudo pip install pytest-sugar
        sudo python -m pytest health-check/tests